{"version":3,"sources":["assets/stackline_logo.svg","components/Navbar/Navbar.jsx","reducer/all_sales.js","components/Sidebar/Sidebar.jsx","components/Graph/Graph.jsx","components/TableData/TableData.jsx","actions/index.js","components/Visuals/Visuals.jsx","components/Homepage/Homepage.jsx","App.js","reportWebVitals.js","reducer/sort_ascending.js","reducer/index.js","index.js"],"names":["Navbar","AppBar","position","className","src","StacklineLogo","alt","INITIAL_ITEM","require","item_data","id","image","title","subtitle","tags","graph_data","Sidebar","Typography","variant","component","color","map","tag","tag_index","Button","Graph","x_axis","retail_sales","wholesale_sales","forEach","sale","weekEnding","split","month","push","moment","format","retailSales","wholesaleSales","plot","labels","datasets","label","fill","data","lineTension","borderColor","height","options","plugins","legend","display","maintainAspectRatio","elements","point","radius","scales","y","x","grid","TableData","dispatch","useDispatch","table_rows","item","useSelector","state","all_sales","sales","is_ascending","sort_ascending","date","retail","value","displayType","thousandSeparator","prefix","wholesale","retail_margin","retailerMargin","units_sold","unitsSold","TableContainer","Table","TableHead","TableRow","style","padding","Object","keys","key","index","TableCell","align","cursor","type","onClick","event","sorter","target","new_data","sort","a","b","payload","sort_rows","TableBody","values","Visuals","Homepage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","root_reducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa29d0c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stackline_logo.99033cd7.svg\";","import AppBar from \"@material-ui/core/AppBar\";\r\nimport StacklineLogo from \"../../assets/stackline_logo.svg\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <div className=\"navbar\">\r\n        <img src={StacklineLogo} alt=\"Stackline Logo\" className=\"navbar__img\" />\r\n      </div>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const sales = require(\"../data/stackline_frontend_assessment_data_2021.json\");\r\n\r\nconst INITIAL_ITEM = sales[0];\r\n\r\nconst { id, image, title, subtitle, tags } = INITIAL_ITEM;\r\n\r\nexport const all_sales = (state = INITIAL_ITEM, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_STATES\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const item_data = { id, image, title, subtitle, tags };\r\nexport const graph_data = INITIAL_ITEM[\"sales\"];\r\n","import { Button } from \"@material-ui/core\";\r\nimport \"./Sidebar.css\";\r\nimport { item_data } from \"../../reducer/all_sales\";\r\nimport { Typography } from \"@material-ui/core\";\r\nconst Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"item\" key={item_data.id}>\r\n        <div className=\"item__data\">\r\n          <div className=\"item__data__image\">\r\n            <img src={item_data.image} alt=\"Item logo\" className=\"sale__img\" />\r\n          </div>\r\n          <div className=\"item__data__title\">\r\n            <Typography variant=\"h6\" component=\"h6\" key={item_data.id}>\r\n              {item_data.title}\r\n            </Typography>\r\n          </div>\r\n          <div className=\"item__data__subtitle\">\r\n            <Typography color=\"textSecondary\">{item_data.subtitle}</Typography>\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className=\"item__tags\">\r\n          {item_data.tags.map((tag, tag_index) => {\r\n            return (\r\n              <Button variant=\"outlined\" key={tag_index}>\r\n                {tag}\r\n              </Button>\r\n            );\r\n          })}\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./Graph.css\";\r\nimport { graph_data } from \"../../reducer/all_sales\";\r\n\r\nconst Graph = () => {\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n      },\r\n      x: {\r\n        display: true,\r\n        grid: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  let x_axis = [];\r\n  let retail_sales = [];\r\n  let wholesale_sales = [];\r\n  graph_data.forEach((sale) => {\r\n    const [, month] = sale.weekEnding.split(\"-\");\r\n    x_axis.push(moment(month, \"M\").format(\"MMMM\"));\r\n    retail_sales.push(sale.retailSales);\r\n    wholesale_sales.push(sale.wholesaleSales);\r\n  });\r\n\r\n  const plot = {\r\n    labels: x_axis,\r\n    datasets: [\r\n      {\r\n        label: \"retail sales\",\r\n        fill: false,\r\n        data: retail_sales,\r\n        lineTension: 0.5,\r\n        borderColor: \"rgb(0, 0, 255)\",\r\n      },\r\n      {\r\n        label: \"wholesale sales\",\r\n        fill: false,\r\n        data: wholesale_sales,\r\n        lineTension: 0.5,\r\n        borderColor: \"rgb(169, 169, 169)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"graph\">\r\n      <Line data={plot} height={450} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","import \"./TableData.css\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport moment from \"moment\";\r\nimport { all_sales, sort_ascending } from \"../../actions/index\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst TableData = () => {\r\n  const dispatch = useDispatch();\r\n  const table_rows = [];\r\n  let item = useSelector((state) => state.all_sales);\r\n  let sales = item[\"sales\"];\r\n  const is_ascending = useSelector((state) => state.sort_ascending);\r\n  sales.forEach((sale) => {\r\n    var date = moment(sale.weekEnding).format(\"MM-DD-YYYY\");\r\n    var retail = (\r\n      <NumberFormat\r\n        value={sale.retailSales}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n    );\r\n    var wholesale = (\r\n      <NumberFormat\r\n        value={sale.wholesaleSales}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n    );\r\n    var retail_margin = (\r\n      <NumberFormat\r\n        value={sale.retailerMargin}\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"$\"}\r\n      />\r\n    );\r\n    var units_sold = sale.unitsSold;\r\n\r\n    table_rows.push({ date, retail, wholesale, units_sold, retail_margin });\r\n  });\r\n\r\n  const sort_rows = (event) => {\r\n    let sorter = event.target.value;\r\n    let new_data = [...sales];\r\n    if (is_ascending) {\r\n      new_data.sort((a, b) => (a[sorter] > b[sorter] ? 1 : -1));\r\n    } else {\r\n      new_data.sort((a, b) => (a[sorter] > b[sorter] ? -1 : 1));\r\n    }\r\n    dispatch(sort_ascending());\r\n    dispatch(all_sales({ ...item, sales: new_data }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow key={0} style={{ padding: \"0px\" }}>\r\n              {Object.keys(sales[0]).map((key, index) => (\r\n                <TableCell\r\n                  key={index}\r\n                  align=\"center\"\r\n                  style={{ padding: \"10px\" }}\r\n                >\r\n                  <input\r\n                    key={index}\r\n                    style={{ cursor: \"pointer\" }}\r\n                    type=\"button\"\r\n                    onClick={(event) => {\r\n                      sort_rows(event);\r\n                    }}\r\n                    value={key}\r\n                  />\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {table_rows.map((sale, index) => (\r\n              <TableRow key={index}>\r\n                {Object.values(sale).map((values, index) => (\r\n                  <TableCell key={index} align=\"center\">\r\n                    {values}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Table />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","export const all_sales = (sales) => {\r\n  return {\r\n    type: \"UPDATE_STATES\",\r\n    payload: sales,\r\n  };\r\n};\r\n\r\nexport const sort_ascending = () => {\r\n  return {\r\n    type: \"SORT_ASCENDING\",\r\n  };\r\n};\r\n","import Graph from \"../Graph/Graph\";\r\nimport TableData from \"../TableData/TableData\";\r\nimport \"./Visuals.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Visuals = () => {\r\n  return (\r\n    <div className=\"homepage__sales\">\r\n      <Typography variant=\"h6\" component=\"h6\">\r\n        Retail Sales\r\n      </Typography>\r\n      <Graph />\r\n      <TableData />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Visuals;\r\n","import \"./Homepage.css\";\r\n\r\nimport Sidebar from \"../Sidebar/Sidebar\";\r\nimport Visuals from \"../Visuals/Visuals\";\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <div className=\"homepage\">\r\n      <Sidebar />\r\n      <Visuals />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Homepage from \"./components/Homepage/Homepage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Navbar />\r\n      <Homepage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const sort_ascending = (state = true, action) => {\r\n  switch (action.type) {\r\n    case \"SORT_ASCENDING\":\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sort_ascending;\r\n","import { combineReducers } from \"redux\";\r\nimport { all_sales } from \"./all_sales\";\r\nimport sort_ascending from \"./sort_ascending\";\r\n\r\nconst root_reducer = combineReducers({\r\n  all_sales,\r\n  sort_ascending,\r\n});\r\n\r\nexport default root_reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { createStore } from \"redux\";\r\nimport root_reducer from \"./reducer/index.js\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(\r\n  root_reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}